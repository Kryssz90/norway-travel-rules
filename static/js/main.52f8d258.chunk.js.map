{"version":3,"sources":["components/utils/block.jsx","components/utils/externalLink.jsx","images/mano-logo.png","components/forms/start.jsx","constants.js","components/forms/age.jsx","components/forms/vaccine.jsx","components/forms/wasUnderwent.jsx","components/forms/countryColor.jsx","components/forms/vaccineType.jsx","components/final/result.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Block","children","boxShadow","maxW","width","borderWidth","borderRadius","borderColor","overflow","padding","textAlign","background","marginBottom","ExternalLink","href","text","rel","target","color","Start","setStarted","src","maNoLogo","alt","colorScheme","onClick","ageValues","sourceCountryColor","defaultUserState","age","undefined","sourceCountry","approvedVaccinated","wasunderwent","gotVaccine","initialVaccineState","id","manufacturer","name","score","Age","setAge","fontSize","map","v","i","Vaccine","setGotVaccine","WasUnderwent","setWasunderwent","date","Date","setDate","getDate","toLocaleDateString","CountryColor","setSourceCountry","VaccineRow","count","setCount","gap","border","w","h","margin","justifyContent","alignContent","VaccineType","setApprovedVaccinated","useState","vaccines","setVaccines","validateVaccines","reduce","s","change","value","max","min","updateVaccines","size","Result","measures","preRegistration","testOnArrival","testBeforeArrival","quarantine","testOnDay3","ref","useRef","useEffect","current","scrollIntoView","as","App","started","className","centerContent","vaccinated","getMeasures","renderComponent","marginTop","textColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52f8d258.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Center } from '@chakra-ui/react';\n\nconst Block = ({ children }) => (\n  <Box\n    boxShadow=\"md\"\n    maxW=\"lg\"\n    width=\"100%\"\n    borderWidth=\"1px\"\n    borderRadius=\"lg\"\n    borderColor=\"gray.700\"\n    overflow=\"hidden\"\n    padding=\"5px\"\n    textAlign=\"justify\"\n    background=\"rgba(255,255,255,0.08)\"\n    marginBottom={4}>\n    <Center>{children}</Center>\n  </Box>\n);\n\nBlock.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default Block;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from '@chakra-ui/react';\n\nconst ExternalLink = ({ href, text }) => (\n  <Link rel=\"noopener nofollow\" target=\"_blank\" color=\"teal.500\" href={href}>\n    {text}\n  </Link>\n);\n\nExternalLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default ExternalLink;\n","export default __webpack_public_path__ + \"static/media/mano-logo.9f2746df.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, Center, Button, Stack } from '@chakra-ui/react';\nimport ExternalLink from '../utils/externalLink';\nimport maNoLogo from '../../images/mano-logo.png';\nimport Block from '../utils/block';\n\nconst Start = ({ setStarted }) => (\n  <Block>\n    <Stack>\n      <Text textAlign=\"justify\" marginBottom={3}>\n        Ez a kérdőív azért készült, hogy segítsen eligazodni a norvég utazási\n        szabályokban. Felhívjuk a figyelmet, hogy a hivatalos információk norvég\n        és angol nyelven a kormány, a{' '}\n        <ExternalLink href=\"https://www.helsenorge.no/\" text=\"Helse Norge\" /> és\n        az <ExternalLink href=\"https://www.fhi.no/\" text=\"FHI\" /> oldalán\n        olvashatóak. Specifikus kérdés esetén hívják a hivatalos koronavírus\n        információs vonalat:{' '}\n        <ExternalLink href=\"tel:+4781555015\" text=\"+47 815 55 015\" />{' '}\n      </Text>\n\n      <Center>\n        <img src={maNoLogo} width=\"50%\" alt=\"Magyar-Norvég fórum logo\" />\n      </Center>\n\n      <Center>\n        <Text marginBottom={3}>\n          <ExternalLink\n            href=\"https://www.facebook.com/groups/838282506317284\"\n            text=\"Magyar-Norvég Fórum\"\n          />\n        </Text>\n      </Center>\n\n      <Text marginBottom={3}>\n        Összeállította:{' '}\n        <ExternalLink\n          href=\"https://www.linkedin.com/in/krisztian-zsobrak/\"\n          text=\"Zsobrák Krisztián\"\n        />{' '}\n        és Pál Bettina.\n      </Text>\n\n      <Center>\n        <Button\n          colorScheme=\"green\"\n          onClick={() => {\n            setStarted(true);\n          }}>\n          Kitöltés\n        </Button>\n      </Center>\n    </Stack>\n  </Block>\n);\n\nStart.propTypes = {\n  setStarted: PropTypes.func.isRequired\n};\n\nexport default Start;\n","export const ageValues = ['16 alatt', '16-18 között', '18 vagy idősebb'];\n\nexport const sourceCountryColor = [\n  {\n    text: 'Zöld',\n    color: 'green'\n  },\n  {\n    text: 'Narancssárga',\n    color: 'orange'\n  },\n  {\n    text: 'Vörös',\n    color: 'red'\n  },\n  {\n    text: 'Sötétvörös',\n    color: 'red'\n  }\n];\n\nexport const defaultUserState = {\n  age: undefined,\n  sourceCountry: undefined,\n  approvedVaccinated: undefined,\n  wasunderwent: undefined,\n  gotVaccine: undefined\n};\n\nexport const initialVaccineState = [\n  {\n    id: 'pfizer',\n    manufacturer: 'Pfizer-BioNTech',\n    name: 'Pfizer Comirnaty',\n    score: 1\n  },\n  {\n    id: 'moderna',\n    manufacturer: 'ModernaTX, Inc',\n    name: 'Moderna',\n    score: 1\n  },\n  {\n    id: 'astra',\n    manufacturer: 'Astra Zeneca',\n    name: 'Vaxzevria',\n    score: 1\n  },\n  {\n    id: 'janssen',\n    manufacturer: 'Janssen Pharmaceuticals',\n    name: 'Johnson & Johnson',\n    score: 2\n  },\n  {\n    id: 'sputnik',\n    manufacturer: 'Gamaleja Kutatóközpont',\n    name: 'Szputnyik V',\n    score: 0\n  },\n  {\n    id: 'sinopharm',\n    manufacturer: 'Sinopharm',\n    name: 'Sinopharm',\n    score: 0\n  }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack, Heading, Button } from '@chakra-ui/react';\nimport Block from '../utils/block';\nimport { ageValues } from '../../constants';\n\nconst Age = ({ setAge }) => (\n  <Block>\n    <Stack>\n      <Heading fontSize={25}>Hány éves Ön?</Heading>\n      {ageValues.map((v, i) => (\n        <Button\n          colorScheme=\"green\"\n          onClick={() => {\n            setAge(i);\n          }}>\n          {v}\n        </Button>\n      ))}\n    </Stack>\n  </Block>\n);\n\nAge.propTypes = {\n  setAge: PropTypes.func.isRequired\n};\n\nexport default Age;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Stack, Button } from '@chakra-ui/react';\nimport Block from '../utils/block';\n\nconst Vaccine = ({ setGotVaccine }) => (\n  <Block>\n    <Stack>\n      <Heading fontSize={25}>\n        Kapott-e ön valamilyen COVID-19 elleni vakcinát?\n      </Heading>\n      <Button\n        colorScheme=\"green\"\n        onClick={() => {\n          setGotVaccine(true);\n        }}>\n        Igen\n      </Button>\n      <Button\n        colorScheme=\"green\"\n        onClick={() => {\n          setGotVaccine(false);\n        }}>\n        Nem\n      </Button>\n    </Stack>\n  </Block>\n);\n\nVaccine.propTypes = {\n  setGotVaccine: PropTypes.func.isRequired\n};\n\nexport default Vaccine;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack, Heading, Text, Button } from '@chakra-ui/react';\nimport Block from '../utils/block';\n\nconst WasUnderwent = ({ setWasunderwent }) => {\n  const date = new Date();\n  date.setDate(date.getDate() - 180);\n  return (\n    <Block>\n      <Stack>\n        <Heading fontSize={25}>\n          Az elmúlt 180 napban átesett-e a COVID-19 betegségen dokumentálható\n          (laboratóriumi teszttel igazolva) módon?\n        </Heading>\n        <Text>\n          A 180 nappal ezelőtti dátum: {date.toLocaleDateString('hu-hu')}\n        </Text>\n        <Button\n          colorScheme=\"green\"\n          onClick={() => {\n            setWasunderwent(true);\n          }}>\n          Igen\n        </Button>\n        <Button\n          colorScheme=\"green\"\n          onClick={() => {\n            setWasunderwent(false);\n          }}>\n          Nem\n        </Button>\n      </Stack>\n    </Block>\n  );\n};\n\nWasUnderwent.propTypes = {\n  setWasunderwent: PropTypes.func.isRequired\n};\n\nexport default WasUnderwent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack, Heading, Button } from '@chakra-ui/react';\nimport Block from '../utils/block';\nimport { sourceCountryColor } from '../../constants';\n\nconst CountryColor = ({ setSourceCountry }) => (\n  <Block>\n    <Stack>\n      <Heading fontSize={25}>Milyen szín-besorolású országból érkezik?</Heading>\n      {sourceCountryColor.map((v, i) => (\n        <Button\n          colorScheme={v.color}\n          onClick={() => {\n            setSourceCountry(i);\n          }}>\n          {v.text}\n        </Button>\n      ))}\n    </Stack>\n  </Block>\n);\n\nCountryColor.propTypes = {\n  setSourceCountry: PropTypes.func.isRequired\n};\n\nexport default CountryColor;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Stack,\n  Heading,\n  Box,\n  Button,\n  HStack,\n  Text,\n  Flex\n} from '@chakra-ui/react';\nimport Block from '../utils/block';\nimport { initialVaccineState } from '../../constants';\n\nconst rangeValue = (value, max, min) => {\n  if (value < min) return min;\n  if (value > max) return max;\n  return value;\n};\n\nconst VaccineType = ({ setApprovedVaccinated }) => {\n  const [vaccines, setVaccines] = useState(\n    initialVaccineState.map((v) => ({ ...v, count: 0 }))\n  );\n\n  const updateVaccines = (id, change) => {\n    setVaccines(\n      vaccines.map((v) =>\n        v.id === id ? { ...v, count: rangeValue(v.count + change, 5, 0) } : v\n      )\n    );\n  };\n\n  const vaccineScore = () =>\n    vaccines.reduce((s, v) => s + v.score * v.count, 0);\n\n  const vaccineAmount = () => vaccines.reduce((s, v) => s + v.count, 0);\n\n  const validateVaccines = () => {\n    const score = vaccineScore();\n    if (score >= 2) {\n      setApprovedVaccinated(true);\n    } else {\n      setApprovedVaccinated(false);\n    }\n  };\n\n  return (\n    <Block>\n      <Stack>\n        <Heading fontSize={25}>Milyen típusú vakcinát kapott?</Heading>,\n        {vaccines.map((v) => (\n          <VaccineRow\n            manufacturer={v.manufacturer}\n            name={v.name}\n            count={v.count}\n            key={v.id}\n            setCount={(change) => {\n              updateVaccines(v.id, change);\n            }}\n          />\n        ))}\n        {vaccineAmount() > 0 && (\n          <Button\n            colorScheme=\"green\"\n            size=\"xl\"\n            onClick={() => {\n              validateVaccines();\n            }}>\n            <Stack>\n              {' '}\n              <div>Folytatás:</div>\n              {vaccines.map((v) =>\n                v.count > 0 ? (\n                  <div key={v.id}>\n                    {v.count} dózis {v.name}\n                  </div>\n                ) : null\n              )}\n            </Stack>\n          </Button>\n        )}\n      </Stack>\n    </Block>\n  );\n};\n\nVaccineType.propTypes = {\n  setApprovedVaccinated: PropTypes.func.isRequired\n};\n\nconst VaccineRow = ({ name, manufacturer, count, setCount }) => (\n  <HStack\n    gap={5}\n    border=\"1px\"\n    borderRadius={10}\n    borderColor=\"teal.100\"\n    textAlign=\"left\">\n    <Box\n      w=\"100%\"\n      h=\"100%\"\n      margin={2}\n      justifyContent=\"center\"\n      alignContent=\"center\">\n      <Text>\n        <strong>{name}</strong> <br />\n        <small>{manufacturer}</small>\n      </Text>\n    </Box>\n    <Flex\n      w=\"40%\"\n      h=\"100%\"\n      margin={2}\n      justifyContent=\"center\"\n      alignContent=\"center\">\n      {count > 0 ? <>{count} dózis</> : <>-</>}\n    </Flex>\n    <Box\n      w=\"80%\"\n      h=\"100%\"\n      margin={2}\n      justifyContent=\"center\"\n      alignContent=\"center\">\n      <Button\n        colorScheme=\"green\"\n        margin={2}\n        onClick={() => {\n          setCount(+1);\n        }}>\n        +\n      </Button>\n      <Button\n        colorScheme=\"orange\"\n        margin={2}\n        onClick={() => {\n          setCount(-1);\n        }}>\n        -\n      </Button>\n    </Box>\n  </HStack>\n);\n\nVaccineRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  manufacturer: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setCount: PropTypes.func.isRequired\n};\n\nexport default VaccineType;\n","import React, { useRef, useEffect } from 'react';\nimport {\n  Stack,\n  Heading,\n  Text,\n  UnorderedList,\n  ListItem\n} from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport Block from '../utils/block';\nimport ExternalLink from '../utils/externalLink';\n\nconst Result = ({ measures }) => {\n  const {\n    preRegistration,\n    testOnArrival,\n    testBeforeArrival,\n    quarantine,\n    testOnDay3\n  } = measures;\n\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current.scrollIntoView();\n  });\n\n  return (\n    <Block>\n      <Stack ref={ref}>\n        {quarantine ? (\n          <Heading color=\"red\">Karantén szükséges</Heading>\n        ) : (\n          <Heading color=\"green\">Nincs karantén</Heading>\n        )}\n        <Text>\n          <UnorderedList>\n            {preRegistration && (\n              <ListItem>\n                Online regisztráció a{' '}\n                <ExternalLink\n                  href=\"https://reg.entrynorway.no\"\n                  text=\"reg.entrynorway.no\"\n                />{' '}\n                oldalon, leghamarabb 72 órával, legkésőbb pedig 2 órával a\n                beutazás előtt.\n              </ListItem>\n            )}\n\n            {testBeforeArrival && (\n              <ListItem>\n                Beutazás előtt kötelező egy 24 óránál nem régebbi antigén\n                gyorsteszt vagy PCR teszt. A mintavétel ideje számít.\n              </ListItem>\n            )}\n            {testOnArrival && (\n              <ListItem>\n                Határbelépéskor kötelező antigén gyorstesztet végezni, melynek\n                az eredményét meg kell várni. Ha nincsen tesztállomás, nem\n                üzemel, vagy a hatóságok másként rendelkeznek, akkor 24 órán\n                belül kell antigén vagy PCR tesztet csináltatni. Amennyiben a\n                gyorsteszt eredménye pozitív, úgy 24 órán belül kötelező PCR\n                tesztet csináltatni.\n              </ListItem>\n            )}\n            {testOnDay3 === 'recommended' && (\n              <ListItem>\n                Nincs karantén, azonban a 3. napon ajánlott tesztelni.\n              </ListItem>\n            )}\n          </UnorderedList>\n        </Text>\n        {quarantine && (\n          <>\n            <Heading as=\"h3\">Karantén:</Heading>\n            <Text>\n              <UnorderedList>\n                <ListItem>10 nap otthoni karantén.</ListItem>\n                <ListItem>\n                  A beutazást követő 3. napon lehetőség van egy PCR teszt\n                  elvégzésére, melynek negatív eredményével véget érhet a\n                  karantén.\n                </ListItem>\n                <ListItem>\n                  A beutazás napja a 0. nap, az eredmény pedig a teszt elvégzése\n                  után 24-72 órán belül van meg.\n                </ListItem>\n              </UnorderedList>\n            </Text>\n          </>\n        )}\n      </Stack>\n    </Block>\n  );\n};\nResult.propTypes = {\n  measures: PropTypes.shape({\n    preRegistration: PropTypes.bool.isRequired,\n    testOnArrival: PropTypes.bool.isRequired,\n    testBeforeArrival: PropTypes.bool.isRequired,\n    quarantine: PropTypes.bool.isRequired,\n    testOnDay3: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default Result;\n","import React, { useState } from 'react';\nimport { Container, Button, Heading, Stack } from '@chakra-ui/react';\nimport Block from './components/utils/block';\nimport Start from './components/forms/start';\nimport Age from './components/forms/age';\nimport Vaccine from './components/forms/vaccine';\nimport WasUnderwent from './components/forms/wasUnderwent';\nimport CountryColor from './components/forms/countryColor';\nimport VaccineType from './components/forms/vaccineType';\nimport { defaultUserState, ageValues, sourceCountryColor } from './constants';\nimport Result from './components/final/result';\n\nconst App = () => {\n  const [started, setStarted] = useState(false);\n  const [age, setAge] = useState(defaultUserState.age);\n  const [sourceCountry, setSourceCountry] = useState(\n    defaultUserState.sourceCountry\n  );\n  const [gotVaccine, setGotVaccine] = useState(defaultUserState.gotVaccine);\n  const [approvedVaccinated, setApprovedVaccinated] = useState(\n    defaultUserState.approvedVaccinated\n  );\n  const [wasunderwent, setWasunderwent] = useState(\n    defaultUserState.wasunderwent\n  );\n\n  const getMeasures = () => {\n    const vaccinated = gotVaccine && approvedVaccinated;\n\n    switch (age) {\n      case 0: // under 16\n        switch (vaccinated) {\n          case true: // Approved vaccine\n            return {\n              preRegistration: false,\n              testOnArrival: true,\n              testBeforeArrival: false,\n              quarantine: false,\n              testOnDay3: 'no'\n            };\n          case false: // Not approved or no vaccine\n            switch (wasunderwent) {\n              case true:\n                return {\n                  preRegistration: false,\n                  testOnArrival: true,\n                  testBeforeArrival: false,\n                  quarantine: false,\n                  testOnDay3: 'no'\n                };\n              case false:\n                return {\n                  preRegistration: false,\n                  testOnArrival: true,\n                  testBeforeArrival: false,\n                  quarantine: false,\n                  testOnDay3: 'recommended'\n                };\n              default:\n                // Not underwent data\n                return undefined;\n            }\n          default:\n            // No vaccine data\n            return undefined;\n        }\n      case 1: // 16-18\n        switch (vaccinated) {\n          case true: // Approved vaccine\n            return {\n              preRegistration: true,\n              testOnArrival: true,\n              testBeforeArrival: false,\n              quarantine: false,\n              testOnDay3: 'no'\n            };\n          case false: // Not approved or no vaccine\n            switch (wasunderwent) {\n              case true:\n                return {\n                  preRegistration: true,\n                  testOnArrival: true,\n                  testBeforeArrival: false,\n                  quarantine: false,\n                  testOnDay3: 'no'\n                };\n              case false:\n                return {\n                  preRegistration: true,\n                  testOnArrival: true,\n                  testBeforeArrival: false,\n                  quarantine: false,\n                  testOnDay3: 'recommended'\n                };\n              default:\n                // Not underwent data\n                return undefined;\n            }\n          default:\n            // No vaccine data\n            return undefined;\n        }\n\n      case 2: // 18+\n        switch (vaccinated) {\n          case true: // Approved vaccine\n            return {\n              preRegistration: true,\n              testOnArrival: true,\n              testBeforeArrival: false,\n              quarantine: false,\n              testOnDay3: 'no'\n            };\n          case false: // Not approved vaccine, no vaccine\n            switch (wasunderwent) {\n              case true: // Underwent\n                return {\n                  preRegistration: true,\n                  testOnArrival: true,\n                  testBeforeArrival: false,\n                  quarantine: false,\n                  testOnDay3: 'no'\n                };\n              case false: // Not underwent\n                switch (sourceCountry) {\n                  case 0: // Green\n                  case 1: // Orange\n                    return {\n                      preRegistration: true,\n                      testOnArrival: true,\n                      testBeforeArrival: true,\n                      quarantine: false,\n                      testOnDay3: 'no'\n                    };\n                  case 2: // Red\n                  case 3: // Dark red\n                    return {\n                      preRegistration: true,\n                      testOnArrival: true,\n                      testBeforeArrival: true,\n                      quarantine: true,\n                      testOnDay3: 'endquarantine'\n                    };\n                  default:\n                    return undefined;\n                }\n              default:\n                return undefined;\n            }\n          default:\n            return undefined;\n        }\n      default:\n        return undefined;\n    }\n  };\n\n  const renderComponent = () => {\n    const measures = getMeasures();\n    if (measures) {\n      return <Result measures={measures} />;\n    }\n\n    if (!started) return <Start setStarted={setStarted} />;\n    if (age === undefined) return <Age setAge={setAge} />;\n    if (gotVaccine === undefined)\n      return <Vaccine setGotVaccine={setGotVaccine} />;\n    if (gotVaccine === true && approvedVaccinated === undefined)\n      return <VaccineType setApprovedVaccinated={setApprovedVaccinated} />;\n    if (wasunderwent === undefined)\n      return <WasUnderwent setWasunderwent={setWasunderwent} />;\n    if (sourceCountry === undefined)\n      return <CountryColor setSourceCountry={setSourceCountry} />;\n\n    return <>Invalid state</>;\n  };\n\n  return (\n    <div className=\"App\">\n      <Container maxW=\"xl\" centerContent>\n        <Heading fontSize={36} marginBottom={6} textAlign=\"center\">\n          Beutazási szabályok Norvégiába\n        </Heading>\n        {age !== undefined && (\n          <Block>\n            <Stack width=\"xl\">\n              {age !== undefined && (\n                <div>\n                  <b>Kor:</b>\n                  <br />\n                  {ageValues[age]}\n                </div>\n              )}\n              {gotVaccine !== undefined && (\n                <div>\n                  <b>Kapott COVID-19 oltást:</b>\n                  <br /> {gotVaccine ? 'Igen' : 'Nem'}{' '}\n                </div>\n              )}\n              {approvedVaccinated !== undefined && (\n                <div>\n                  <b>Norvégia által elfogadott oltást kapott:</b> <br />{' '}\n                  {approvedVaccinated ? 'Igen' : 'Nem'}{' '}\n                </div>\n              )}\n              {wasunderwent !== undefined && (\n                <div>\n                  <b>Átesett a COVID-19 betegségben az elmúlt 180 napban:</b>\n                  <br /> {wasunderwent ? 'Igen' : 'Nem'}{' '}\n                </div>\n              )}\n              {sourceCountry !== undefined && (\n                <div>\n                  <b>Kiindulási ország:</b>\n                  <br /> {sourceCountryColor[sourceCountry].text}{' '}\n                </div>\n              )}\n            </Stack>\n          </Block>\n        )}\n        {renderComponent()}\n        <Button\n          colorScheme=\"gray\"\n          size=\"sm\"\n          marginTop=\"15px\"\n          textColor=\"black\"\n          onClick={() => {\n            setStarted(false);\n            setAge(defaultUserState.age);\n            setSourceCountry(defaultUserState.sourceCountry);\n            setGotVaccine(undefined);\n            setApprovedVaccinated(defaultUserState.approvedVaccinated);\n            setWasunderwent(defaultUserState.wasunderwent);\n          }}>\n          Újrakezdés\n        </Button>\n        Frissítve: 2021. 12. 09.\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('travel-rules-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}