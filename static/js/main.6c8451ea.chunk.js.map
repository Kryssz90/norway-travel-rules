{"version":3,"sources":["machine.js","App.js","reportWebVitals.js","index.js"],"names":["ruleMachine","createMachine","id","initial","states","start","on","START","RESET","vaccine","YES","NO","vaccinetype","SUFFICENT","NOTSUFFICENT","wasunderwent","countrycolor","GREEN","ORANGE","RED","DARKRED","quarantine","novaccinatedgreen","vaccinated","Block","children","maxW","borderWidth","borderRadius","overflow","padding","Start","send","colorScheme","onClick","Vaccine","WasUnderwent","CountryColor","initialVaccineState","manufacturer","name","score","VaccineType","useState","map","v","count","vaccines","setVaccines","validateVaccines","reduce","s","setCount","change","value","max","min","updateVaccines","size","VaccineRow","gap","w","h","margin","justifyContent","alignContent","Quarantine","color","href","as","NotVaccinatedGreen","Vaccinated","App","useMachine","current","console","log","className","centerContent","matches","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c8451ea.chunk.js","sourcesContent":["import { createMachine } from \"xstate\";\r\n\r\nconst ruleMachine = createMachine({\r\n  id: \"fetch\",\r\n  initial: \"start\",\r\n  states: {\r\n    start: {\r\n      on: {\r\n        START: 'vaccine',\r\n        RESET: 'start'\r\n      }\r\n    },\r\n    vaccine: {\r\n      on: {\r\n        YES: \"vaccinetype\",\r\n        NO: \"wasunderwent\",\r\n        RESET: 'start'\r\n      },\r\n    },\r\n    vaccinetype: {\r\n      on: {\r\n        SUFFICENT: \"vaccinated\",\r\n        NOTSUFFICENT: \"wasunderwent\",\r\n        RESET: 'start'\r\n      }\r\n    },\r\n    wasunderwent: {\r\n      on: {\r\n        YES: \"countrycolor\",\r\n        NO: \"quarantine\",\r\n        RESET: 'start'\r\n      },\r\n    },\r\n    countrycolor: {\r\n      on: {\r\n        GREEN: \"novaccinatedgreen\",\r\n        ORANGE: \"novaccinatedgreen\",\r\n        RED: \"quarantine\",\r\n        DARKRED: \"quarantine\",\r\n        RESET: 'start'\r\n      },\r\n    },\r\n    quarantine: {\r\n      on: {\r\n        RESET: 'start'\r\n      }\r\n      \r\n    },\r\n    novaccinatedgreen: {\r\n      on: {\r\n        RESET: 'start'\r\n      }\r\n    },\r\n    vaccinated: {\r\n      on: {\r\n        RESET: 'start'\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default ruleMachine","import { useState } from 'react';\nimport { Container, Center, Box, Button, Text, Heading, Stack, Grid, HStack, Flex, UnorderedList, ListItem } from '@chakra-ui/react'\n\nimport { useMachine } from '@xstate/react'\n\n\nimport ruleMachine from './machine';\n\n\nconst Block = ({ children }) => <Box maxW='lg' borderWidth='1px' borderRadius='lg' overflow='hidden' padding=\"5px\" ><Center>{children}</Center></Box>\n\nfunction App() {\n  const [current, send] = useMachine(ruleMachine);\n\n\n  console.log(current)\n  return (\n    <div className=\"App\" >\n      <Container maxW=\"xl\" centerContent>\n        {current.matches('start') && <Start send={send} />}\n        {current.matches('vaccine') && <Vaccine send={send} />}\n        {current.matches('wasunderwent') && <WasUnderwent send={send} />}\n        {current.matches('quarantine') && <Quarantine send={send} />}\n        {current.matches('countrycolor') && <CountryColor send={send} />}\n        {current.matches('novaccinatedgreen') && <NotVaccinatedGreen send={send} />}\n        {current.matches('vaccinated') && <Vaccinated send={send} />}\n        {current.matches('vaccinetype') && <VaccineType send={send} />}\n        <Button colorScheme=\"gray\" size=\"sm\" marginTop=\"15px\" onClick={() => {\n          send('RESET')\n        }}>Újrakezdés</Button>\n        Frissítve: 2021. 12. 09.\n      </Container>\n    </div >\n  );\n}\n\nconst Start = ({ send }) => {\n  return (<Box maxW='lg' borderWidth='1px' borderRadius='lg' overflow='hidden' padding=\"5px\">\n    <Center>\n      <Heading>Norvégiába beutazás kérdőív</Heading>\n    </Center>\n    <Center>\n      <Button colorScheme=\"green\" onClick={() => {\n        send('START')\n      }}>\n        Kitöltés\n      </Button>\n    </Center>\n  </Box>)\n}\n\nconst Vaccine = ({ send }) => {\n  return (\n    <Block>\n      <Stack>\n        <Heading>Kapott-e ön valamilyen COVID-19 elleni vakcinált?</Heading>\n        <Button colorScheme=\"green\" onClick={() => { send(\"YES\") }}>Igen</Button>\n        <Button colorScheme=\"green\" onClick={() => { send(\"NO\") }}>Nem</Button>\n      </Stack>\n    </Block>\n  )\n}\n\nconst WasUnderwent = ({ send }) => {\n  return (\n    <Block>\n      <Stack>\n        <Heading>Átesett-e ön dokumentált módon a COVID-19 betegségen az elmúlt 6 hónapon belül?</Heading>\n        <Button colorScheme=\"green\" onClick={() => { send(\"YES\") }}>Igen</Button>\n        <Button colorScheme=\"green\" onClick={() => { send(\"NO\") }}>Nem</Button>\n      </Stack>\n    </Block>\n  )\n}\n\nconst CountryColor = ({ send }) => {\n  return (\n    <Block>\n      <Stack>\n        <Heading>Milyen színű országból érkezik?</Heading>\n        <Button colorScheme=\"green\" onClick={() => { send(\"GREEN\") }}>Zöld</Button>\n        <Button colorScheme=\"orange\" onClick={() => { send(\"ORANGE\") }}>Narancs</Button>\n        <Button colorScheme=\"red\" onClick={() => { send(\"RED\") }}>Piros</Button>\n        <Button colorScheme=\"red\" onClick={() => { send(\"DARKRED\") }}>Sötétvörös</Button>\n      </Stack>\n    </Block>\n  )\n}\n\nconst initialVaccineState = [\n  {\n    id: 'pfizer',\n    manufacturer: \"Pfizer-BioNTech\",\n    name: \"Pfizer Comirnaty\",\n    score: 1\n  },\n  {\n    id: 'moderna',\n    manufacturer: \"ModernaTX, Inc\",\n    name: \"Moderna\",\n    score: 1\n  },\n  {\n    id: 'astra',\n    manufacturer: \"Astra Zeneca\",\n    name: \"Vaxzevria\",\n    score: 1\n  },\n  {\n    id: 'janssen',\n    manufacturer: \"Janssen Pharmaceuticals\",\n    name: \"Johnson & Johnson\",\n    score: 2\n  },\n  {\n    id: 'sputnik',\n    manufacturer: \"Gamaleja Kutatóközpont\",\n    name: \"Szputnyik V\",\n    score: 0\n  },\n  {\n    id: 'sinopharm',\n    manufacturer: \"Sinopharm\",\n    name: \"Sinopharm\",\n    score: 0\n  }\n]\n\nconst rangeValue = (value, max, min) => {\n  if(value < min) return min;\n  if(value > max) return max;\n  return value\n}\n\nconst VaccineType = ({ send }) => {\n\n  const [vaccines, setVaccines] = useState(initialVaccineState.map((v) => ({...v, count: 0})));\n\n  const updateVaccines = (id, change) => {\n    setVaccines(\n      vaccines.map(\n        (v) => (v.id == id ? ({...v, count: rangeValue(v.count+change, 5, 0) }) : v))\n      )\n  }\n\n  const vaccineScore = () => {\n    return vaccines.reduce(\n      (s,v) => s+(v.score*v.count),\n      0\n    )\n  }\n\n  const vaccineAmount = () => {\n    return vaccines.reduce(\n      (s,v) => s+(v.count),\n      0\n    )\n  }\n\n  const validateVaccines = () => {\n    const score = vaccineScore();\n    if(score >= 2) {\n      send('SUFFICENT')\n    } else {\n      send('NOTSUFFICENT')\n    }\n  }\n\n  return (\n    <Block>\n      <Stack>\n        <Heading>Milyen típusú vakcinát kapott?</Heading>,\n        {vaccines.map((v) => (\n        <VaccineRow\n          manufacturer={v.manufacturer}\n          name={v.name} \n          count={v.count}\n          key={v.id}\n          setCount={(change) => {updateVaccines(v.id, change)}}\n          /> ))}\n          { vaccineAmount() > 0 && <Button colorScheme=\"green\" size=\"xl\" onClick={() => {\n            validateVaccines()\n          }}><Stack> <div>Folytatás:</div>{\n            vaccines.map((v) => v.count > 0 ? <div key={v.id}>{v.count} dózis {v.name}</div> : null)\n          }</Stack></Button> }\n          \n      </Stack>\n    </Block>\n  )\n}\n\nconst VaccineRow = ({ name, manufacturer, count, setCount }) => {\n  return <HStack gap={5}>\n    <Box w='100%' h='100%' margin={2} justifyContent=\"center\" alignContent=\"center\">\n      <Text>\n        <strong>{name}</strong> <br />\n        <small>{manufacturer}</small>\n      </Text>\n    </Box>\n    <Flex w='30%' h='100%' margin={2} justifyContent=\"center\" alignContent=\"center\">\n      {count > 0 ? (<>{count} dózis</>) : (<>-</>)}\n    </Flex>\n    <Box w='100%' h='100%' margin={2} justifyContent=\"center\" alignContent=\"center\">\n      <Button colorScheme=\"green\" margin={2} onClick={() => {setCount(+1)}}>+</Button>\n      <Button colorScheme=\"orange\" margin={2} onClick={() => {setCount(-1)}}>-</Button>\n    </Box>\n  </HStack>\n}\n\nconst Quarantine = ({ send }) => {\n  return (\n    <Block>\n      <Stack>\n        <Heading color=\"red\">Karantén szükséges</Heading>\n        <Text>\n        <UnorderedList>\n            <ListItem>16 év felett előzetes online regisztráció a <a href='https://reg.entrynorway.no'>reg.entrynorway.no</a> oldalon, max. 72 órával a beutazás előtt.</ListItem>\n            <ListItem>18 év felett a beutazás előtt kötelező egy 24 óránál nem régebbi PCR vagy antigén gyorsteszt.</ListItem>\n            <ListItem>Határbelépéskor vagy 24 órán belül antigén gyorsteszt vagy PCR teszt</ListItem>\n        </UnorderedList>\n        </Text>\n        <Heading as=\"h3\">Karantén:</Heading>\n        <Text>\n        <UnorderedList>\n            <ListItem>10 nap otthoni karantén 18 év felett</ListItem>\n            <ListItem>A belépést követő 3. napon elvégzett teszt negatív eredményével véget érhet karantén (opcionális).</ListItem>\n            <ListItem>18 év alatt csak ajánlott a teszt elvégzése</ListItem>\n        </UnorderedList>\n        </Text>\n      </Stack>\n    </Block>\n  )\n}\n\nconst NotVaccinatedGreen = ({ send }) => {\n  return (\n    <Block>\n      <Stack>\n        <Heading color=\"orange\">Nincs karantén</Heading>\n        <Text>\n          <UnorderedList>\n            <ListItem>16 év felett előzetes online regisztráció a <a href='https://reg.entrynorway.no'>reg.entrynorway.no</a> oldalon, max. 72 órával a beutazás előtt.</ListItem>\n            <ListItem>18 év felett a beutazás előtt kötelező egy 24 óránál nem régebbi PCR vagy antigén gyorsteszt.</ListItem>\n            <ListItem>Határbelépéskor vagy 24 órán belül antigén gyorsteszt vagy PCR teszt</ListItem>\n          </UnorderedList>\n        </Text>\n      </Stack>\n    </Block>\n  )\n}\n\nconst Vaccinated = ({ send }) => {\n  return (\n    <Block>\n      <Stack>\n        <Heading color=\"green\">Nincs karantén</Heading>\n        <Text>\n          <UnorderedList>\n            <ListItem>16 év felett előzetes online regisztráció a <a href='https://reg.entrynorway.no'>reg.entrynorway.no</a> oldalon, max. 72 órával a beutazás előtt.</ListItem>\n            <ListItem>Határbelépéskor vagy 24 órán belül antigén gyorsteszt vagy PCR teszt</ListItem>\n          </UnorderedList>\n        </Text>\n      </Stack>\n    </Block>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('travel-rules-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}